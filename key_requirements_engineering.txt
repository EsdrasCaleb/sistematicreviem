 (semi-)automatic GUI generation, Action Design Research, Adaptive systems, Advanced dependencies, Agile Modeling Method Engineering, Algorithm Bias, Android permission, App Reviews, Automated Requirements Based Test Generation, Autonomy, Boundary spanning, CCSL, CRM, Case Study, Catalog, ChatGPT, Children, Complicated, Consistency Verification, Context Information, Crowd, CrowdRE, DO-178C, Doc2Vec, EasyWinWin, Empirical study, Environment Modelling, Environmental Safety, Event Logs;Data-Driven;Goal Mining, Experiment, Feature Model, Feedback Analysis, FlexiView, Focus Groups, Formal Analysis of Requirements, Formal Methods, Formalization, FrameNet, GDPR, GRL, Gender Bias, Goal Model, Goal based Reasoning, Grounded Theory, HDBSCAN, Highly Automated Vehicles, IT project controlling, Information extraction, Interaction, Interviews, Invisibility, IoT, Just-in-time, Lean, Legal requirements elicitation, Machine Learning, Machine learning, Maturity Models, Metamodeling, Modeling Tools, Modeling method requirements, Modeling tools, NFR, NFRs, NLP, Natural Language Processing, Natural language processing, Navigation techniques, Non-Functional Requirements, Observations, Ontology, Optimization, Problem Frames, Process Assessment, Qualitative analysis, Quality Characteristic, Questionnaires, RE for IoPTS, RE for ecosystems, RE with the society, Refactorings Recommendation, Release planning, Requirement (re) prioritization, Requirement organization, Requirement representation, Requirements Corpus, Requirements Elicitation, Requirements Engineering, Requirements Engineering Education, Requirements Identification and Classification, Requirements engineering, Requirements modeling, SMEs, SOA, SVMs, SafeNL, Safety Engineering, Safety Requirements, Safety-Critical Systems, Self Adaptation, Semantic Annotation, Semantic Frames, Simulation, Socio-Technical Systems, Software, Software Evolution, Software Refactoring, Storyboarding, Sustainability, SysML, System evolution, Tool support, Twitter, UCM, UML, User Feedback, User Interface, User Support Conversations, VBSE, Weakly supervised learning, WinWin Negotiation Model, Zooming, accessibility, adaptive user interfaces, agile, agile customer, agile development, agile process, agile requirements engineer, agile software development, agility, alternative and augmentative communication, and Transparency, answer set, appropriate technology, assurance, automated require ments tracing, automatic GUI tailoring, automatic test generation, automation, automotive, avionics software, broader impact, business value of IT, canvas, case study, case-based reasoning, certification, cloud computing, clustering, collaboration, collaborative filtering, collective sensemaking, communication, complex, complex adaptive systems, complexity, compliance of requirements, component, conceptual model, conflict resolution, content analysis, context accumulation, context analysis, cyber-physical systems, data collection, datasets, deep learning, dependency, design science, developing countries, diversity, e-accessibility, edge computing, effort estimation, elicitation, embedded automotive software, empirical research method, empirical study, equity-diversity-inclusion, evaluation, feature modelling, feature-similarity model, feedback acquisition, goal modeling, gold standard, good software test cases, grounded theory methodology, hackathon, i* methodology, inclusion, industrial experience, information needs, information systems, interaction design, intermediated interactions, knowledge management, large language models, law, learnability, linguistic analysis, machine learning, machine-learning, measurement, metadata, metrics, mistral, mobile interfaces, modeling, mutation score, natural language processing, open-source development, packaged enterprise system, passive testing, patent law domain, persona technique, play-testers, play-testing, polysemy analysis, privacy, privacy risk, probing questions, product family development, product life cycle management (PLM), prompting, prototype, qualitative research methods, qualitative study, qualities, quality criteria, quality model, quality requirements, questionnaire, recommender system, regulation, reliability, requirement based testing, requirement engineering, requirement-driven development, requirements, requirements elicitation, requirements engineering, requirements engineering (RE), requirements modelling language, requirements problem, requirements quality, requirements traceability, requirements traceability matrix, requirements validation, requirements-based testing, retrieval augmented generation, reusability, safety, score, security requirements identification, security requirements user study, self-adaptive systems, semantic roles, service, smart ecosystem, social computing, software architectures, software development, software engineering, software evolution, software quality, software requirements specification, software testing, source code quality, system assurance, system certification, system testing, system usability, tacit knowledge., team learning, term coreference, test case generation, test language, testability, textual modeling, textual template, traceability, tracing, training sets, ubiquity, uncertainty, usability, usability features, usability patterns, usage monitoring, user centered design, user feedback, user forum, user involvement, workshop,;security-and-privacy,AI4RE;Process Models;Process Descriptions;Large Language Models,AIRE-Workshop-on-Artificial-Intelligence-and-Requirements-Engineering,Abstraction finding;Ambiguity finding;App review analysis;False negatives;False positives;Information retrieval;Natural language processing;Precision;Recall;Requirements specification defect finding;Tracing,Acceptance requirements;gamification;context models;goal models;requirements engineering,Activities; Enterprise architecture; Management involvement; Phases; Prioritization; Software development process; Tasks,Advanced Persistent Threat;Security Requirements;Problem Domain Ontology;Case-Based Reasoning,Affective Computing;requirements engineering,Agent-Oriented Requirements Engineering;Goal-Oriented Requirements Engineering;Conceptual Modeling;Responsible AI,Agile,Agile Agile Development;Issue Tracking System;Version Control System;Requirements Knowledge,Agile Development;Requirements Engineering;Model-Based Testing;Use case specification,Agile Requirements Engineering;Issue Tracking Systems;User Stories,Agile methods; Lean management; Process management; Requirements management; Variability management,Agile requirements engineering;user stories;NLP;AQUSA;Visual Narrator;REVV-Light;RE4SA,Agile requirements engineering;user stories;natural language processing,Agile;Quantitative Analysis & Decision Science;Requirements Prioritization;Story Points Estimation;Velocity Prediction;Box Plot;Text Mining;AHP;SPAN,Agile;Scrum;Safety Critical,Ambiguity; Disambiguation; Empirical study; Formalization; Inspection; Natural language requirements,Analytic Hierarchy Process (AHP);Banking;Requirements Engineering;SEAM;Service Oriented Architecture (SOA);Switzerland,Analytical approaches; Constructive approaches; Inspections; Quality assurance; Quality characteristics; Requirements,Analytical models; Computer software; Mathematical programming; Reliability; Software engineering; Software reliability; Prototypes; Software systems; Spirals; Software prototyping,Analytical models; Programming; Prototypes; Reliability; Software; Software engineering; Spirals,App Analytics;Rationale;Review Mining,App Store Analysis;Requirements Elicitation;App Features Extraction;Rating Estimation;Mobile Applications;Software Analytics;Predictive Modelling;Natural Language Processing;Machine Learning;Case Based Reasoning,App Stores Mining;Data Driven Requirements Engineering;Natural Language Processing,Application programs; Computer software reusability; Life cycle; Software design; Software reliability; Application area; Development community; Escalating costs; Reusable softwares; Software development life cycle; Software practitioners; Software solution; Software synthesis; Software prototyping,Application programs; Integration testing; Process control; Process planning; Product design; Software design; Systems engineering; Component testing; Problem definition; Product evaluation; Software integration; Software requirements; Software system testing; Software systems; Solution analysis; System definition; Cost engineering,Application programs; Product design; Semantics; Software design; Syntactics; Automated techniques; Large complex systems; Requirements to designs; Semantic information; Software requirements; System development process; System-level requirements; Validation and verification; Life cycle,Approaches; Challenges; Elicitation; Issues; Requirements; Survey; Techniques; Tools; Trends,Architecturally Significant Requirements;Architectural Design Decisions;co-development;relationship,Architecturally significant requirements;large-scale project delivery;exploratory case study;empirical research method;qualitative interviews;quantitative study,Argumentation;Requirements;Requirements Engineering;Requirements Refinements;Requirements negotiation;Requirements Elicitation;Structured Argumentation;Dung Abstract Framework;Formal Argumentation;Goal models;tools;traceability;Requirements analysis;requirements verification;Formal approaches;Formal models,Artificial Intelligence;AI;Explainability;Explainable Artificial Intelligence;Performance;Non-Functional Requirements;NFR;XAI;Trade-Off Analysis;Accuracy,Automated Requirements Checking;Behavior-Driven Development;Ontological Modeling;Prototyping;Multi-Artifact Testing,Automotive;Process Improvement;Automotive SPICETM;Requirements Management,Autonomous Systems,Awareness Requirements;Self-Adaptive Software Reengineering;Reverse Engineering for Self-Adaptive System,Behavior Driven Development;Scenario Template;Agile Requirement Modeling;Acceptance Test,Behavioral Programming;Executable Specifications;Requirement Engineering;Liveness,Brainstorming Domain awareness;Domain expertise;Domain ignorance;Empirical software engineering;Industrial case study;Importance of ignorance;Requirements engineering;Requirements idea generation,Bridges; Documentation; Schedules; Software engineering; Software systems; Systems engineering and theory,Business requirements; Product requirements; Project requirements; Requirements management; Requirements taxonomy; Stakeholders,Buyer; Characteristics; Concept of operation; Concepts of operations document; Conops; Developer; Operational requirements; Scenario; Software system; Software-intensive system; System; User; User requirements; Viewpoint,COTS; Implementing requirements engineering; Product life cycle management; Systems engineering,COVID-19;Contact-Tracing Apps;Non-Functional Requirements;Public Good;Crisis Management,CPS,Change Impact Analysis;Natural Language Requirements;Natural Language Processing (NLP),ChatGPT;Natural Language Requirements;Inconsistency Detection,Chatbot;Contextual Information;Requirement Elicitation;User Feedback;Rasa Open-Source,Classification scheme; Decision making; Decision support; Requirements engineering decision; Requirements engineering process; Research analysis,Classification;Natural Language Processing (NLP);Neural Networks;Requirements Engineering,Code and component testing; Problem definition; Process control; Process planning; Product evaluation; Software design; Software integration; Software requirements generation; Software system engineering; Software system testing; Solution analysis; System definition; System engineering,Collaboration; Conflict resolution; Negotiation; Negotiation process; Negotiation tools; Stakeholder win-win,Competition; Software design; Competitive advantage; S-process; Small scale; Software development and maintenances; Software engineering institutes; Software technology; Formal methods,Complexity theory; Inspection; Maintenance engineering; Programming; Software; Software engineering; Testing,Compliance control; Regulatory compliance; Specifications; Verification; Best practices; Document standards; Planning and controlling; Software requirements; Software requirements management; Software requirements specifications; Software systems; System requirements; Requirements engineering,Computer software; Inspection; Maintainability; Mathematical programming; Software engineering; Software testing; Testing; Complexity theory; Quality management,Computer software; Large-scale software systems; Software life cycles; Software systems; Software prototyping,Computer software; Scheduling; Software engineering; System program documentation; Systems engineering; Software systems; Systems engineering and theories; Bridges,Conceptual Schema Validation;Requirements-based testing;Model-driven validation;Conceptual Schema Testing,Conceptual modeling;Methodologies and tools;Legal compliance;Regtech,Conflict;Trade-off;Non-Functional Requirements;Quality Characteristics;Internet of Things;Ubiquitous Computing,Conflicting requirements;Systems of Systems;Conflict Identification,Contract; Customer; Prototyping; Software requirements specification; Supplier; System requirements specifications,Contracts; Formal specification; Requirements engineering; Commercial software products; Customer; Recommended practice; Software requirements specifications; Supplier; System requirements specifications; Software prototyping,Creativity;Triggers;Requirements;Elicitiation,Cross-References Regulatory Compliance;Requirements;Software Engineering,Crowd RE;personality;creativity;smarthome;dataset;data challenges,Crowd-based requirements engineering;deep learning;feedback analysis;machine learning;user feedback;user reviews,Crowd-based requirements engineering;requirements engineering;crowdsourcing;cross-disciplinary research,Crowd-based requirements engineering;requirements engineering;crowdsourcing;motivation;cross-disciplinary research;human values,Crowd;crowd-based Requirements Engineering;market research;problem statement,Crowd;crowd-based requirements engineering;digital farming;speech-to-text,CrowdRE;requirements elicitation;case studies,CrowdRE;requirements engineering,Customer relationship management;machine learning;escalation prediction;customer support ticket,Cyber-Physical Systems,Cyber-Physical Systems (CPS);Human-Centric Design;Requirements Engineering;Requirements Elicitation;Digital Process Twin (DPT);Subject-Oriented Modeling,Cyber-physical systems;verification;emergent behavior,Cybersecurity;TARA;penetration testing;test oriented requirements engineering (TORE),D.2.1 Requirements/Specifications;K.4 Computers and Society O.9.1 Engineering ethics O.9.3 Moral implications,Data Visualization;Data Analysis;Model-driven development;Requirements engineering,Data flow analysis;privacy principles;requirements validation,Data flow graphs; Flowcharting; Software engineering; Systems engineering; Concept of operations; Data flow diagrams; Software and hardwares; Software environments; System architects; System engineering management; System engineering process; System evolution; Object oriented programming,Data models; Natural languages; Real time systems; Software engineering; Software systems; Tutorials,Data protection,Data set,Data structures; Interactive computer systems; Software engineering; Natural languages; Software requirements; Software systems; Tutorials; Real time systems,Data-Driven Requirements Engineering;Clustering;Social Media Analytics;Deep Learning;Feedback Mining,Data-Driven Requirements Engineering;Usage Analytics;Machine Learning;Product Management,Decision support tool;goals;older adults;recreation;requirements;social isolation,Decision support; Requirements analysis; Requirements prioritization; Software product planning; Trade offs,Decision tables; Decision trees; Finite state machines; Paisley; PDL; Petri nets; Revs; RPL; SDL; Statecharts; Structured analysis,Decision trees; Finite automata; Petri nets; External systems; Paisley; Revs; Statecharts; Structured analysis; Decision tables,Dependencies between requirements;Data analytics,Design Methodology;Professional Community;Evolutionary Lifecycle;Framework,Design Thinking;Requirements Engineering,Design thinking;Business process;Procurement process;Requirements elicitation,DevOps;Dependencies;Conflicts;Risk analysis;Non-Functional Requirements,DevOps;Design-Operation;Requirements Elicitation;Cyber-Physical Systems,Digital ecosystem,Digital transformation;Requirements Engineering;Software Industry,Documentation;Artifacts;Requirements engineering;Software engineering tools;Interview;exploratory study,Domain Models;Traceability;Natural Language (NL);Machine Learning (ML);Traceability Knowledge Graph,Domain Models;Traceability;Natural Language (NL);Machine Learning (ML);Traceability Knowledge Graph (TKG);Traceability Information Model (TIM),Domain model;completeness validation;software requirements,Elicitation; Goal; Goal modeling; Goal specification; Reasoning with goals; Scenario; User; Variability,Empirical Software Engineering;Requirements;TraceLab,Empirical research method;Quality requirements;Agile;Requirements engineering;Interviews;Case study,Empirical software engineering; Requirements engineering practice; Survey,Empirical-research;controlled-experiment;machine-learning;automation,End user;Wide Audience;Requirements Elicitation;Conversational Agent;Design Science;Laddering,Engineering Paradigm; Formal Methods; Information Systems Development; Language Z,Example Mapping;Shared Understanding;Refinement;User Stories,Experience requirements;testing;validation;design goal;user experience,Explainability;Explainability Requirements;Explainable Artificial Intelligence;XAI;Explainable Systems;Explainable Software;Requirements Engineering,Explainability;Explanations;Case Study;NonFunctional Requirements;Quality Aspects;Explainable Systems,Explainability;Explanations;Explainable Artificial Intelligence;Interpretability;Non-Functional Requirements;Quality Aspects;Requirements Synergy;Software Transparency,Explainability;Non-Functional Requirements;Qualitative Requirements;lntentional Modeling;Collaboration;Social Requirements,Explainability;Time Series Forecasting;Re-quirements Elicitation;Empirical Research,Fairness;Non-functional Requirements;Machine Learning,Feature Request;Natural Language Process;Smell Detection,Feature Requests,Feature Requests;Large Language Models;Ambiguity;Requirement Smells,Feature model;Use case;Synchronization;Bidirectional Programming,Feedback gathering,Fog computing;data movement;computation movement;goal model,Formal Requirements Analysis;Real-time Requirements;Redundancy;Vacuity;Phase Event Automata,Functional and Non-Functional Requirements;Classification;Topic Modeling;Clustering;Naive Bayes,Functional specifications;feature interaction;model-based development;automotive;empirical studies,GAIA-X;Innovation Modeling;Committee-focused Requirements Engineering,GDPR;Compliance;Privacy;Requirements,GUI Prototyping;Requirements Elicitation;Requirements Validation;User Stories;Assistance,Global Decision Making;Multi-Stakeholder;Variability;Impact;Requirements;Design,Glossary Term Extraction;Co-ordination Ambiguity;Adjectival Ambiguity;Natural Language Processing,Goal Oriented Requirements Engineering (GORE);Empirical Studies;Modeling Automation,Goal Oriented Requirements Engineering (GORE);Tool Demo;Evolving Requirements,Goal Oriented Requirements Engineering;Tool support;SaaS;Integration,Goal model annotation,Goal model;SysMl model;Socio cyber physical systems;self_adaptation,Goal model;reuse;context;requirements reuse;model-driven requirements engineering,Goal modeling;Goal conflicts;Argumentation;Argument schemes;Analysis of competing hypotheses;ACH,Goal modeling;requirements management;SysML;tool integration;User Requirements Notation,Goal modelling tool;Web tool;Statechart Derivation;Requirements-driven software adaptation,Goal-oriented requirements engineering;Use case;Ontology-based requirements analysis;incorrectness;incompleteness;inconsistency;detection and resolution,Graphical Models,Graphical Models;Requirements Engineering;Modeling Tools;User Interface,Grounded Theory;theory;requirements elicitation;demand-side response;energy service,HCI;Safety Critical Systems;Traceability,Health;Environmental Determinants;Social Determinants;Requirements Engineering;Design Thinking;Diabetes,Hedonic Quality;Pragmatic Quality;Controlled Experiment;User Experience;Project Involvement;Definitions of Pragmatic and Hedonic Qualities;Quality Model,Homelessness;Shared Artifact;Emotion led;Socio Technical System,Human Values;GDPR;Software Requirement,Human Values;Goal Modeling;Feature Modeling;Model-driven Software Development,Human Values;Requirements Engineering;HCI,Human Values;Traceability;Goal Modeling,Human barriers;service design;visual model;causal loop diagram,Human values;Requirements;Artificial intelligence;App reviews;Empirical study,Hyponym;hypernym;natural language processing;ontology;privacy policy;compliance,IT business value;evaluation;system dynamics,Idea generation;crowdsourcing;Crowd RE;creativity;personality;smart home,Impact analysis; Metrics; Non-functional requirements; Propagation of change; Software change; Traceability analysis,Inconsistency management;human factors;IS development;method adoption,Inductive assessment; Model-based assessment; Process assessment; Requirements engineering; Software process improvement; State of practice,Industrial requirements;requirements formalization;formal verification,Industry Demands;Job Advertisements;RE Job Role;Content Analysis;Benchmarking,Industry track;case study track;research conference;practitioner conference,Informal requirements change;scope creep;requirements management;requirements change management,Information Retrieval;Causation;Natural Language Processing;Automatic Test Case Derivation,Information systems; Information use; Management information systems; Industrial practices; Information systems developers; Information systems development; Language Z; Formal methods,Interlocking System,International Mobile Equipment Identity (IMEI);Quick Response (QR) Code;Requirements,Internet of Things;Smart Homes;Requirements Description Language,Interviews;Government Projects;Empirical Studies;Requirements Elicitation,IoT;Privacy Requirements;Inconsistency Analysis;Privacy Notice,Issue Management;Issue Tracking Systems;Dependency Management;Duplicate Detection;Mining Issue Tracker;JIRA;BERT,Knowledge engineering; Mathematical programming; Models; Requirements engineering; Software systems; Tutorials; Software engineering,Knowledge engineering; Modeling; Programming; Software engineering; Software systems; Tutorials,Knowledge graph;empirical research;requirements engineering;FAIR;sustainability;literature review,Legal Compliance;Legal Requirements;Large Language Models;GPT-4;GDPR,Legal Compliance;Legal Requirements;Large Language Models;GPT-4;GPT-3.5;BERT;GDPR;Food Safety;Industry 4.0;Internet of Things,Legal Compliance;Legal Texts;Cross References,Legal Compliance;Multiple Regulations;Conflict Management;Goal-oriented Requirements Language,Legal Compliance;Privacy Policies;The General Data Protection Regulation (GDPR);Natural Language Processing (NLP);Machine Learning (ML);Case Study Research,Legal Contract;Specification Language;Model Checking;Smart Contract;Ontology,Legal Metadata;Technology Transfer,Legal Requirements;Legal Markup;Natural Language Processing (NLP),Legal Requirements;Modeling;Simulation,Legal Requirements;Requirements Templates;AI-assisted RE;Natural Language Processing,Legal contracts;smart contracts;software requirements specifications;formal specification languages,Legal requirements;requirements analysis;legal coverage;regulation modeling;privacy;compliance,Life cycle; Systems engineering; Development approach; Process Modeling; Software elements; System levels; Validation and verification; Requirements engineering,MDE;Meta-Modeling;Model Extraction;Dependency Extraction;AI in SDLC;NLP4RE;Traceability;Requirements Specification;Feature Dependency,MDE;Meta-Modeling;Model Extraction;Rule Classification;AI in SDLC;NLP4RE;Requirements Specification,Machine Learning;Software Requirements;Requirements Engineering;Mapping Study,Managers; Apriori; Design team; Key characteristics; Requirements document; Under-constrained; Human resource management,Market-driven requirements engineering; Process improvement; Process quality; Product software; Release planning; Requirements selection,Massive Multiplayer Online Role-Playing Games;Gameplay design;Play-centric requirements engineering;Play-testing;Gameplay balancing;Exploratory case study;Empirical research method,Measurement; Network protocols; Software engineering; Software requirements analysis; Requirements engineering,Measurement; Protocols; Software engineering,Measuring quality of requirements; Quality attributes of requirements; Requirements engineering and management via Rational Unified Process; Requirements quality metrics; Use-case model; Use-cases,Medical device safety and security;requirements elicitation;sequence based enumeration,Meta-Models; Model transformation; Modeling; Requirements; Specification,Middleware;Quality of Requirements;Requirements Specifications;Interface Requirements Definition;Digital Transformation,Mobile apps;Survey;App store mining;Software Release planning;Empirical software engineering,Mobility Requirements;Scenarios;Situational Contexts;Interaction;Tools,Model Based Systems Engineering (MBSE);Retrofit;Industry Standards;Traceability;Subsea,Model Driven Development;Requirements Engineering,Model based requirements;molecular programs;chemical reaction networks,Model modeling;conventions;practices;model declaration;requirements engineering;RE@21,Model-Based Systems Engineering;Security requirements;Risk assessment;System and security co-engineering,Model-Driven Engineering;Requirements Engineering,Model;requirements capture;formal methods,Modeling method requirements,Models;Physical;Formal;Behaviour structure,Most Influential Paper;Requirements Engineering Conference;RE@21,Multi-Criteria Requirement Prioritization;Software Product Line;Artificial intelligence,NLP;Machine Learning;Domain Model;Modelling Bot;Requirements Engineering;Trace Links,Natural Language Processing (NLP);Large Language Models (LLMs);Prompt Engineering;ChatGPT;Model Generation;Sequence Diagrams,Natural Language Requirements;Named-entity Recognition;System States;State Extraction,Natural Language;Requirement Templates;Quality Metrics;Automation,Next Release Problem,Non-Functional Requirements,Non-Functional Requirements;Model-Driven Development;Quality Requirements;NFR;MDD;Empirical Study;Survey;Semi-Structured Interviews,Non-Functional Requirements;NFRs;qualities;Machine Learning;NFR Challenges;Requirements Engineering,Non-functional requirements (NFRs);Software architecture;Architecture reconfiguration,Non-functional requirements;BERT;N-gram;Bi-LSTM;multi-sample dropout,Non-functional requirements;Deep learning;Requirement classification;Long-tail distribution,Non-functional requirements;goal models;software qualities;ontologies,OSS development;requirements generation;requirements patterns,Obstacle analysis;goal modeling;probabilistic goals;risk control;requirements completeness;exception handling;goal-oriented requirements engineering;quantitative reasoning,Off-nominal behaviors;requirements;reactive systems;concurrency,Open Source Software;Multi-label classification;Issue Reports;Natural Language Processing;Mining Software Repositories,Outreach,Performance Requirements;Sentence Patterns;Completeness,Persona;GPT-4 Model;Knowledge Graph;Requirements Engineering;User Feedback,Persuasive Technology;Security;Privacy;Risk Perception;Risk Appetite;User Requirements Elicitation,Pragmatic requirements engineering;collaboration with stakeholders;requirements engineering for user experience including ethnography;design;usability,Pragmatic requirements engineering;process efficiency;“good-enough” requirements;agile and lean approaches,Prioritisation;Case Study;Stakeholder Satisfaction,Prioritization;Requirements Engineering;Constraint Satisfaction;Model based Diagnosis;Reconfiguration;Re Planning;Multi Attribute Utility Theory;Group Decision Making;Group Recommender Systems;Open Source;OSS,Privacy Engineering;Privacy;Requirements;Ontologies;Semantics,Privacy Policy;Privacy Requirement;Ambiguity;Generality;Semantic Relation;Neural Network;Ontology,Privacy Requirements Elicitation;Agile Teams;Perception;LGPD,Privacy requirements;requirements engineering;elicitation;classification;prioritization;validation,Privacy requirements;standardization;description logic;formal analysis,Privacy;Android applications;Neural Machine Translation,Privacy;consent;policies;evolution;formal framework;description logic,Problem Frames approach;Meta-model;Model-driven engineering;State machine;Block diagram,Problem Frames;problem progression;behavior-driven development,Problem diagrams;Natural Language Processing;Requirements;Automated generation model,Process Mining;Goal Modeling;Requirements Engineering,Professional profile;requirements analyst;competence;software development;Latin America,Quality Engineering;Requirements Elicitation;Domain-specific Requirements Engineering;Design Thinking;Risk Management;Large-scale Requirements Engineering,Quality framework;Quality model;Requirements Engineering;Digital Design,Quality of Experience;user feedback;software quality;quality requirements;requirement monitoring;requirement elicitation;analytics,RE Interaction;RE4RE,RE;Deep Learning;Natural Language Processing,RE@21 generic requirements reuse;concern-oriented;separation of concerns;composition;AoURN;RAM,Refactoring;traceability;information retrieval,Regression Validation;Safety;Liveness;Goal Models;DevOps,Regulatory Change;Prompt Engineering;Natural Language Processing (NLP);Large Language Models (LLMs);ChatGPT;Regulatory Compliance,Regulatory Compliance;Lean-Design Science Research;Maturity Model;Goal-Oriented Modeling,Release planning;app store mining;integer programming;new product design;super app design,Replication;theoretical replication;case study;Scholar@UC;viewpoints;model merging;i*;tech transfer,Requirement Analysis;User Stories;User Reviews Feedback,Requirement Dependencies;Automotive Testing;Requirement Test Status,Requirement Dependencies;Data-Driven Requirements;Issue Tracking Systems;Recommendation Systems;Release management;Similarity/Duplicate Detection;Inconsistency Detection,Requirement Document;Quality Assessment;Visual Rendering;Deep Learning,Requirement Elicitation;Requirement Elicitation Interview;Tool based analysis;Requirements elicitation education;Interview review,Requirement Elicitation;User Feedback;Video Platforms;Classification;TikTok;YouTube,Requirement Engineering;Artifact Quality;Automated Methods,Requirement Engineering;Culture;Case study,Requirement Engineering;Hazard Analysis Risk Assessment;Autonomous Vehicles;DevOps;Safety;Large Language Model;Prompt Engineering;LLM;ChatGPT,Requirement Engineering;Large Language Model;Elicitation and Validation,Requirement Engineering;Software Development Process;Cultural Influences;Organisational culture,Requirement Engineering;Trust;Goal Modeling;Provenance,Requirement Templates;Functional Requirements;Recommendation;Tool Support,Requirement Templates;Readability;Quality Metrics;Guideline Rules;Natural Language Requirements,Requirement alignment;requirement configuration structure;requirement consistency analysis;requirement inconsistency matrix;requirement consistency index,Requirement analysis;Variability constraints;Variability requirements;Configurable system;Feature model,Requirement coupling; Requirements dependencies; Requirements interdependencies; Requirements traceability,Requirement elicitation;quality attributes;non-functional requirements;quality of experience (QoE);quality of service (QoS),Requirement engineering;entity coreference;deep learning;fine-tuning BERT,Requirement patterns;requirements reuse;call-for-tender processes,Requirement-based test generation;Product Line Engineering;Requirements Specification;Natural language;Test Derivation;Test Scenarios;Configuration,Requirement; SyRs; System; System requirements specification,Requirements Analysis;Formal Requirements;Inconsistency;rt Inconsistency;vacuity;Formal Analysis;Program Analysis,Requirements Classification;Requirements Engineering;Machine Learning;Transfer Learning;Language Model;BERT,Requirements Classification;Traceability Link Recovery;Requirements Engineering;Machine Learning;Infor-mation Retrieval;Language Model,Requirements Dataset;PURE;Natural Language Requirements;NLP;NLP Tasks;Public Requirements;Requirements Abstraction;Requirements Ambiguity Detection;Requirements Categorisation;Model Synthesis;XML;Empirical Software Engineering;Empirical Studies,Requirements Dependency;Bug Prediction;Network Analysis,Requirements Documents,Requirements Elicitation Techniques,Requirements Elicitation;Interviews;Ambiguity;Ambiguity Cue;Generality;Ambiguity in Spoken Language,Requirements Elicitation;User Stories;Natural Language Processing;Conversational RE,Requirements Engineering,Requirements Engineering (RE);Large Language Models (LLMs);ChatGPT-4;Question Generation;Read-ability of Requirements Specifications (RS);Completeness of Requirements Specifications (RS),Requirements Engineering (RE);Regulatory Compliance;The General Data Protection Regulation (GDPR);Data Processing Agreement (DPA);Machine Learning (ML);Natural Language Processing (NLP),Requirements Engineering Tasks;Requirements Engineering Questions;Requirements Traceability,Requirements Engineering;Architecture;Construction;AECO;Building Information Model;BIM,Requirements Engineering;Artifacts;Use Cases;Change;Maintainability,Requirements Engineering;Artificial Intelligence;Machine Learning;Systematic Literature Review,Requirements Engineering;Automated Vehicles;Human Factors;Agile Development,Requirements Engineering;Automated Vehicles;Human Factors;Agile Development;Requirements Strategy,Requirements Engineering;Body of Knowledge;REBoK RE Interactive;Requirements Engineering Education,Requirements Engineering;Crime Records Management;Workflow Analysis;Prototyping;System Goals,Requirements Engineering;Data protection;Requirements Elicitation;Human-centric elicitation,Requirements Engineering;Domain Models;Machine Learning;Model Derivation;User Stories;Large Language Models,Requirements Engineering;Emotions;User Feedback;Monitoring;Software Evolution;User Experience,Requirements Engineering;Empirical Study;Survey;Online Questionnaire,Requirements Engineering;Explainability;Taxonomy;User Feedback,Requirements Engineering;Explainability;XAI,Requirements Engineering;Feature Usage Analysis;Product Usage;Requirement Evaluation;Software Enhancement;Data Analytics;Big Data Analytics,Requirements Engineering;Formalization;Specification Pattern Systems;Linear Temporal Logic;Redundant Tests,Requirements Engineering;Glossary Term Extraction;Abbreviation-Expansion Pair Detection;Synonym Detection;Requirement Data-Set;Abbreviation Data-Set,Requirements Engineering;Goal modeling;Modeling tool,Requirements Engineering;Inconsistency Management,Requirements Engineering;Internet of Things (IoT);Healthcare,Requirements Engineering;Large Language Models (LLMs);ChatGPT;Code Generation;Use Cases;Software Specification;Automated Software Engineering,Requirements Engineering;Large Language Models;Traceability,Requirements Engineering;MDE;Requirements modeling;model federation;continuous update;requirements management;requirements tracing,Requirements Engineering;Machine Learning;Goal-Oriented Requirements Analysis;Uncertainty;Monitoring;Arguments,Requirements Engineering;Mining User Feedback;Software Engineering;Reference Architecture;Software Analytics,Requirements Engineering;Model-based Engineering;Collaborative Projects;Experience Report;Scalability;Heterogeneity;Traceability;Automation,Requirements Engineering;Natural Language Inference;Large Language Models;Software Requirements Classification;Specification Defects;Requirements Conflict Detection,Requirements Engineering;Natural Language Processing;Glossary Term Extraction;CrowdRE,Requirements Engineering;Non-Functional Requirements;Snorkel;CNN;RNN;Attention;BERT;Transfer Learning;Domain Adaptation,Requirements Engineering;Practices;Chal-lenges;Industry,Requirements Engineering;Regulatory Compliance;Change-Impact Analysis,Requirements Engineering;Regulatory Compliance;Natural Language Processing (NLP);Question Answering;Language Models (LMs);BERT,Requirements Engineering;Requirements Classification;Language Models;BERT;Domain-Specific Language Models;Transfer Learning;Deep Learning;Machine Learning;Natural Language Processing,Requirements Engineering;Requirements Elicitation;Emotions;Multi-modal Data Analysis,Requirements Engineering;Requirements Elicitation;Interview,Requirements Engineering;Requirements Elicitation;Wizard-of-Oz;Empirical Study;Prototyping;Mobile App Development,Requirements Engineering;Requirements Engineering Education;Systematic Literature Review;Learning Outcomes;Educational Approaches;Pedagogy,Requirements Engineering;Requirements Traceability;Pre-Requirements specification Traceability;Literature review;Qualitative Survey,Requirements Engineering;Requirements Validation;Test Engineering;Machine Learning;Natural Language Processing;Neural Networks,Requirements Engineering;Requirements-driven Testing;Test Scenarios;Large Language Models (LLMs);Industry Study,Requirements Engineering;Safety-Critical Systems;Real-time Requirements;Requirements Inconsistency;Re-quirements Formalization,Requirements Engineering;Small Businesses;Common practices;Software development industry;Software professionals;Requirements elicitation.,Requirements Engineering;Software Evolution;Strategic Planning;Scenario Planning;Creativity,Requirements Engineering;Software Traceability;Safety-critical Systems;Model-based Traceability;Model-driven Development,Requirements Engineering;Task Interruptions;Multitasking;Task Switching;Empirical Software Engineering,Requirements Engineering;Task Interruptions;Task Switching;Requirements Visualization;Visual Analytics,Requirements Engineering;Transportation Management;Tool Development;Traffic Signal Timing,Requirements Engineering;education and training;learning from practice;technology transfer,Requirements Engineering;society;innovation;software engiuerring;crowdsourcing,Requirements Formalization,Requirements Generation;Requirements Engineering,Requirements Inspection;Requirements Engineering Education and Training;Empirical Study,Requirements Inspection;Requirements Verification and Validation;SRS;Pragmatic Quality Model;Question Set;Risk Prediction,Requirements Intelligence;Data-Driven Requirements;Data Mining;Social Media Analytics;App Store Analytics,Requirements Knowledge;Business Rules;Empirical Studies;Software Documentation;Domain Knowledge,Requirements Monitorig;Systems of Systems;Requirements Traceability,Requirements Negotiation,Requirements Practices;Startup Ecosystem;Case Study,Requirements Technical Debt Quantification;Systematic Mapping;Conceptual Model,Requirements Traceability;Modelbased Engineering;Terminology,Requirements Violation Analysis;Safety Assessment;Autonomous Driving Systems;Configuration,Requirements and acceptance tests alignement;Requirements change management,Requirements communication;interdisciplinary teams;film studies;psychology;research agenda,Requirements configurator;Ontology;Product Line;Financial product suite;Configuring products;Knowledge assisted configuration,Requirements dependencies;dependency extraction;active learning;domain ontologies;hybrid method;empirical evaluation;industrial data,Requirements discovery;Deep learning;Data analytics;Uncrewed Aerial Systems,Requirements discovery;Simulation;Driver assistive technology,Requirements elicitation,Requirements elicitation;Crowdsourcing;Social media;Online discussions;Query language,Requirements elicitation;Multi-methods;Brain Injury;Rehabilitation;Therapy;Games;Case-based Recommender,Requirements elicitation;User interfaces;Prototyping;Diffusion models,Requirements elicitation;app store mining;software feature mapping;crowd data;machine learning,Requirements elicitation;cloud systems;empirical study;state of practice,Requirements elicitation;cognition;emotion;motivation;organizational climate,Requirements elicitation;models;techniques;common ground;tacit knowledge,Requirements elicitation;workshop video;requirements quality;video analysis,Requirements engineering,Requirements engineering assessment;requirements process improvement,Requirements engineering for services;requirements elicitation;levels of assurance;trustworthy service level agreement;empirical research,Requirements engineering for user experience;usability;enrolment process;Personas;Sentire;Volere;industry and research collaboration,Requirements engineering process;requirements engineering process failures;traceability,Requirements engineering; Conceptual frameworks; Development process; Management level; Requirements document; Software life cycle model; Software requirements; Technical details; Waterfall model; Software design,Requirements engineering; Requirements evolution; Stakeholder analysis; Web-based information systems,Requirements engineering; Social aspects; Computer-based system; Discourse analysis; Ethnomethodology; Paper surveys; Requirements elicitation; Social issues; System development process; Tacit knowledge; Surveys,Requirements engineering; Software engineering; Business objects; Entity-relationship; Data mining,Requirements engineering; Software engineering; Buyer; Characteristics; Concept of operations; Concepts of operations; Conops; Developer; Operational requirements; Scenario; Software intensive systems; Software systems; System; User; User requirements; Viewpoint; Radar target recognition,Requirements engineering; Software engineering; Concept of operations; Operational concepts; Operational requirements; Software intensive systems; Technical specifications; Specifications,Requirements engineering; Software engineering; Software requirements specifications; Formal specification,Requirements engineering; Software engineering; Spiral models; Software design,Requirements engineering; Software requirements specifications; Formal specification,Requirements engineering;Affect-laden requirements;Emotional requirements,Requirements engineering;Assurance cases,Requirements engineering;Health;Well Being;Aging,Requirements engineering;Natural language processing;Quality of requirements;Mashups,Requirements engineering;Requirements Formalisation;Requirements Extraction,Requirements engineering;Security;Safety;Cyber-physical systems;ISO/SAE 21434,Requirements engineering;Simulation toolkit;Safety-critical;Product Line,Requirements engineering;Traceability;Clustering;System specifications documents;Documents hierarchies,Requirements engineering;User feedback;Goal-Question-Metric;Goal-oriented requirements analysis,Requirements engineering;affective computing;software engineering;emotions;psychology,Requirements engineering;agile software development;continuous integration;continuous deployment;continuous delivery;industry practices,Requirements engineering;collaboration;tool;sketching;ad-hoc modeling;notation definition;meetings,Requirements engineering;creativity;topic modeling;requirements elicitation,Requirements engineering;cross-discipline;review;frontiers,Requirements engineering;decision-making;real options;valuation;requirements debt;technical debt,Requirements engineering;empathy;design thinking (DT);micro-crowd;collaborative platform,Requirements engineering;experiments;dependent variables;frameworks;measurement;theory,Requirements engineering;future;vision,Requirements engineering;molecular programming;safety case,Requirements engineering;passive voice;weak words;empirical investiigation,Requirements engineering;redundancy;inconsistency;clustering;NLP;technical documents,Requirements engineering;softgoals;optimization;search-based software engineering,Requirements engineering;software requirements specifications;empirical research;large language models,Requirements engineering;twin peaks;opensource RE;requirements identification;requirements implementation;creativity in RE,Requirements engineering;vision paper,Requirements engineering;vision video;crowd;video comment;feedback;classification,Requirements engineeringEng;empirical research methods,Requirements evolution;prediction model;volatility measure;case study,Requirements management tool;business analysis;requirements engineering;tool selection;tool evaluation,Requirements management;requirements engineering visualization;visual analytical reasoning,Requirements management;requirements engineering visualization;visual analytics;decision making,Requirements modeling,Requirements modeling;app store analysis;domain engineering;case study,Requirements modeling;feature specifications;statecharts;industry;automotive software,Requirements negotiation;decision making;social aspects;software ecosystems,Requirements requirements specification;solutions,Requirements specification;Requirements analysis;Quality analysis,Requirements specification;requirements defects;requirements reviews;software defects;software quality;mentoring,Requirements specification;requirements defects;reviews;software defects;software quality;multi-generational software products,Requirements specifications;Domain Analysis;Language Extended Lexicon;Use Case Points;Software Sizing,Requirements traceability,Requirements traceability;Automated traceability;Traceability,Requirements validation;defect taxonomies;requirements quality;requirements review;requirements-based testing;test management,Requirements verification and validation;Third party inspection;Quality model of requirements specifications,Requirements-Engineering;Community-based-Requirements-Engineering;Crowdsourcing;Ontology;Methods;Tools;Techniques;Approaches,Requirements-engineering;data-analytics;Big-data;data-science;software-engineering,Requirements;Agile Development;Machine Learning;Natural Language Processing;Active Learning,Requirements;Classification;Machine Learning;Imbalanced Data,Requirements;Machine Learning;Automotive,Requirements;Modeling,Requirements;Requirements Validation;Consistency Checking;Prototype;Prototyping,Requirements;Stories;DevOps;Behaviour Driven Development;Quality Assessment,Requirements;Well-being;Aging;Health,Requirements;conflict;creativity;game;jigsaw puzzle;stakeholders;team work;communication;metaphor;visualization,Requirements;quality;CSCW;Post-WIMP;awareness;CSRML,Requirements;refinement;architecture;commitments;teams;protocols,Reuse;Reusability;Mass Personalization;Product Lines;Feature modelling;Case-based Reasoning;Feature-similarity Model,Reviews;Requirements Specifications,Risks Requirements engineering;Composite applications;Dynamic service provisioning;Homecare systems,Runtime requirements;Runtime goal model;User behaviors mining,Safety Assurance;Requirements Specification;Small Uncrewed Aerial Systems;Digital Shadow;Cyber-Physical Systems,Safety Functional Requirements;Fault Tree Analysis;Critical Systems;Hazard Situations;Embedded Systems,Safety Requirements;User Stories;Agile Development;Safety-Critical Systems,Safety case;Machine Learning;RE for AI-based safety-critical systems;safety assurance;autonomous vehicle,Safety cases;Safety assurance;Safety requirements;Machine learning;Large language models;Generative AI;RE quality models and their automation,Safety requirement;Requirement engineering;Complex system;FMECA;Fault Tree,Safety-critical system;safety standards;safety compliance;safety certification;safety evidence;evidence evolution;evidence traceability;change impact,Safety;Requirements;Autonomous Robotic Systems,Search-Based Software Engineering;Responsible Software Engineering;Software Fairness;Software Footprint;On-line Social Systems,Security Controls;Cyber Digital Twin;Requirements Prioritization;Agile Security;Analytical Attack Graph;Attack Surface,Security Guidelines;Development Lifecycle;Information flow,Security Requirements;Requirements Prioritization;Agile Security;Attack Graph;Graph Analytics;Attack Path;Remediation Requirements;Attack Surface;Cyber Digital Twin,Security management,Security requirement,Security requirements;Cybersecurity;Information security,Security requirements;Heuristics;Requirements analysis;Software evolution;Knowledge carrying software,Security requirements;sociotechnical systems,Security;Safety;Requirements engineering;Cyber-physical systems;Systems engineering and theory - Systems Modeling Language,Security;Usability;CAIRIS,Security;requirements;objectives;templates;access control;auditing;text classification;constraints;natural language parsing,Security;requirements;patterns;feature diagram,Security;usability;ontology;quality attributes;trade-offs;knowledge base;requirements engineering (RE);and software engineering (SE),Self-adaptation;decision making;AHP;P-CNP;non-functional requirements trade-off;uncertainty;runtime weights updating,Self-adaptation;decision making;non-functional requirements trade-off;uncertainty,Self-adaptation;decision making;non-functional requirements trade-off;uncertainty;P-CNP;AHP,Social Media Analytics;Natural Language Processing;Data Driven Requirements Engineering,Social Requirements Engineering;Community of Practice;requirements elicitation;requirements negotiation;requirements traceability;requirements prioritization,Social engineering attacks;security requirements engineering;likelihood assessment;model checking,Software Development Methodologies;Concurrent Software Engineering;Goal-Oriented Methodologies;Requirements Engineering;Enterprise Information Systems,Software Engineering Contracts;Software Requirements;Requirements Engineering;Abstractive Summarization;Large Language Models;Prompt Engineering,Software Engineering;Requirements Engineering;Requirements Elicitation;Interviews;Ambiguity;Ambiguity in Spoken Language;Empirical Study,Software Feature Request Detection;Mining Software Repositories;Machine Learning;Natural Language Processing,Software Modeling;Statecharts;Agile Development;Formal Verification;Model Checking;Incremental Verification,Software Requirements Relationships;Semantic Elements;Natural Language Processing,Software Requirements Specifications;Quality Characteristics;Inspection;Automotive Software,Software Requirements;Automatic Text Completion;Knowledge Injection,Software Traceability;Datasets Quality;Traceability Automation;Systematic Literature Review,Software Transparency;Explanations;Non-Functional Requirements;Qualitative Evaluation;Interpretability,Software Transparency;Non-Functional Requirements;Requirements Analysis;Requirements Elicitation,Software engineering contracts;requirements;deep learning;extraction;classification,Software engineering; Development method; Object oriented; Object oriented development; Practical recommendation; Work in progress; Requirements engineering,Software engineering; Levels of detail; Method structures; Requirements definition; Requirements engineering process; Stable sets; Requirements engineering,Software engineering; Object oriented; Requirements analysis; Requirements engineering,Software engineering; Requirements engineering,Software engineering; Software requirements; Requirements engineering,Software engineering; Structured analysis; Requirements engineering,Software engineering; System development; Requirements engineering,Software engineering;social sustainability;metrics,Software evolution;goal modeling;elaboration techniques;control loops,Software product forums;Machine learning;Natural language processing,Software product forums;Machine learning;Natural language processing;Requirements engineering,Software requirements selection;multiple stakeholders;Search-based,Spanish requirements;automatic classification requirements;machine learning algorithms;natural language processing,Spatial planning;CrowdRE;requirements engineering;video,Specifications; Spectrometry; Design configurations; Design constraints; Operational concepts; Requirement; SyRs; System; System requirements; System requirements specifications; Requirements engineering,Startups;Product Manager;PM;Requirements Engineering;RE;ChatGPT;Product Management;Structured Literature Review;SLR,Startups;Product Manager;PM;Requirements Engineering;RE;New Product Development;NPD;Software Product Management;SPM;Cash flow,Startups;Requirements,Startups;Requirements Engineering;RE;Cash Flow;Requirements Selection;Requirements Prioritization;Failure;Private Equity;PE;Venture Capital;VC,Stigmergy;Conceptual modeling;Collaborative Modeling,Sustainability,Sustainability Profiling;Requirement Engineering;Analysing Sustainability;Sustainable Software;SuSoftPro;Supporting Tool;Sustainability Requirements,Sustainability;Requirements Engineering;Agile Software Development;Scrum;User Stories;Backlog Items,Sustainability;Requirements Engineering;Sustainability Awareness Framework;Agile Software Development;Scrum;Backlog Items;Case Study,Sustainability;Requirements identification;Requirements representation;Non-functional requirement,Sustainability;Requirements;Supply Chain;Discrete Event Simulation;Modelling,System of Systems;Security;Risk;Requirements Engineering;System of Systems Engineering,System of systems;requirements monitoring,System security;user behaviour;e-voting,Systems of Systems Engineering;Systems of Systems;Requirements Engineering Perspective;Research Agenda;Smart Cities;Cyber-Physical Systems;The Fourth Industrial Revolution,Systems of Systems;Systems of Systems Engineering;Requirements Engineering;Complexity;Panel Discussion;Research Agenda and Roadmap,Tabular Specification;Multi-View Modeling;Model-based Requirements Engineering,Technology and Knowledge Transfer;Requirements Engineering;Empirical Methods;Software Industry,Telemedicine requirements elicitation;scenario and model-based elicitation method,Temporal Requirements;Spatial Requirements;Graphical Notations;Modelling;Tool Support;Research Roadmap,Testing;Simulation;Requirements;Small Unmanned Aerial Systems;Process;Cyber-Physical Systems,Textual Requirements,Theory of constructed emotions;requirements engineering;affective computing,Threat Modeling;Security Requirements;Personae non gratae,Tool;Natural Language Processing;Causality Extraction,Traceability Evaluation Tool;Dependency Tree Visualisation;Automotive SPICE;Requirements Engineering,Traceability;Queries;Speech Recognition;Natural Language Processing,Traceability;Rationale,Traceability;Regulation;Industry needs;Artifact linking,Traceability;Repository Mining;Concept Model;Semantic Analysis;Domain Specified Ontology,Traceability;Requirements Traceability,Traceability;Requirements;Domain-specific Taxonomy;Recommender;Pilot Experiment,Traceability;Requirements;Satisfaction Arguments,Traceability;Safety Assurance;ISO 26262;Safety Case;Design Decisions;Traceability Information Model,Traceability;agile methods;hybrid process,Traceability;artefact;artefact relationship;tool support;empirical validation;RE@21,Traceability;machine learning;model;logistic regression;artifact characteristics,Transparency;Trust;Trust Judgement;Software Engineering;Requirements Patterns;GDPR,Trust Requirements;Requirements elicitation;Peer support systems;Healthcare workers,Twitter;text classification;user requirements;summarization,UX,UbiComp,Uncertainty;RELAX;User stories;Conversational assistants,Unmanned Systems,Use Case;Machine Learning (ML);Natural Language Processing (NLP);Requirement Engineering (RE) Language Processing (NLP);Requirement Engineering (RE),Use case;checklist;authoring guidelines;requirement analysis,User Feedback,User Feedback;Ethics in Software Engineering;Pattern Recognition;Text Mining,User Requirements Notation;Goal-oriented Requirements Language;goal modeling;formal argumentation,User Reviews;App Store Analytics;Software Feature;Data Mining;Data-Driven Requirements,User stories;conceptual modeling;NLP,User stories;requirements quality;AQUSA;QUS Framework;requirements engineering;NLP,User story;semantic conflicts identification;automated conflicts identification tool,User-Centered Design;Collaborative Design;Visual Storytelling;Software Vision;Morphological Box,User;Requirements Elicitation;Wide Audience;Conversational Agent;Self-Elicitation;Laddering,Users;Requirements;Services;Alignment,Vagueness Detection;User Study;Multilingual;Natural Language Processing,Visual impairment;requirements elicitation;situation awareness requirements;assistive technology;qualitative analysis,Visual languages;empirical research;modelling;analysis;end user communication;requirements analysis,Web Accessibility;Agile Development;Requirements Engineering,Workshop organization;Conference Interaction;Feedback from Participants;RE artifacts,Zero-shot Learning;Named entity recognition;Prompt Engineering;Natural Language Inference,abstraction identification;natural language processing;Google Colab,abstractions;natural language;environmental assumptions;requirements-based testing,accessibility requirements,advanced persistent threat;attack scenario;adaptive security requirements;evidence-driven risk assessment;risk-aware problem domain ontology,agile product line engineering;requirements engineering;behaviour-driven development;cloud computing;empirical study,agile requirements;requirements verification;software inspection;software security,agility;requirements engineering;prototyping;RE process;good practices,aim;aspiration;benefit;goal;need;objective;want,ambiguity;requirements engineering;requirements elicitation;gamification;software development,app review analysis;active learning;mobile apps;Crowd RE;social requirements,architecturally significant functional requirements;functional requirements;requirements knowledge;exploratory case study;empirical research method;qualitative interviews;quantitative study,argumentation,artificial intelligence,authoring;definition;EARS;elicitation;natural language;lessons learned;pattern;rigour;rules;stakeholder;template,automated production systems;requirements traceability;systems traceability;SysML;model checking,beyond plan-driven requirements engineering;emerging communication;automotive requirements engineering,business process;regulations;compliance,capability;requirements;security;privacy;SMEs,citizen science;Zooniverse;crowdsourcing;cybersecurity;phishing,cognitive effectiveness;visual notations;modeling languages;user involvement;crowdsourcing,component;Hypothesis-oriented;dual track;agile RE;validated learning;experiment-driven;continuous learning,computer security;requirements engineering;system analysis and design;security risk;threat model;vulnerability;information security;software design;solution design,conceptual modeling;visual notations;cognitive effectiveness;design rationale;physics of notations,consumer;acceptance;survey;non-functional requirements;predictive analytics,context awareness;requirements engineering;context modeling;survey,contract template;formalization;legal requirements;natural language processing;Symboleo,creative requirements;automated requirements generation;deep learning;adversarial examples,crowd RE;user stories;requirements engineering;case study,crowd based requirements engineering;requirements engineering;non-functional requirements;online user reviews;quality characteristics;quality requirements,crowdsourcing;requirements elicitation;socio technical barriers,customer liaison,cybersecurity;serious games;requirements;software developers;industry,data purpose;information types;natural language processing;privacy;policy;content analysis;requirements,data requirements;data quality;data ecosystems;data reusability;in-situ marine data,data requirements;data uncertainty;safety critical systems;machine learning,data-driven engineering;autonomous driving;automated driving;machine learning;data requirements;V-model;process,data-driven requirements elicitation;situational method engineering;agile system development;design science,design fiction;requirements elicitation;speculative design;design thinking;creativity,design thinking,digital design;digital innovation;awareness;readiness;sustainability;shaping;exploring;implementing,digital forensics;adaptation;arguments,distributed RE,domain-specific language;temporal logic;formal requirements;requirements-based testing,electronic evidence;goal-oriented requirements engineering;digital trust management,emotional and cultural intelligence requirements,emotions,empathy-driven development,environment assertions;requirements based testing;requirements engineering and testing;requirements engineering,evolution;product lines;feature model evolution;variability;survivability;cost of reparation,explainable systems;requirements specification;requirements elicitation;terminology;certified explainability,feature interaction;complex systems;safety;logical deduction;system of systems,feature-oriented requirements modeling;model-based requirements validation;eTASM;RUCM;software product lines;systems functional behaviors and non-functional properties,gamification;collaborative requirements prioritisation;automated reasoning techniques,gamification;collaborative requirements prioritization;quasi-experiment,gamification;requirements prioritization;stake-holder motivation;field experiment,gamification;security requirements;requirements engineering;interactive tutorial;STS-ml,goal model;variability models;software product lines;integer linear programming,goal modeling;feature modeling;GRL;Goal-oriented Requirement Language;URN;User Requirements Notation;trade-off analysis;evaluation algorithm;concern;concern-driven development;jUCMNav,goal modeling;human-centric characteristics;user profile;requirements engineering;GRL,hardware requirements;explainable hardware;explainability;explainable systems;non-functional requirements;explainable artificial intelligence;XAI;trustworthiness,healthcare;data analytics;domain knowledge;information model;function and non-functional requirements,healthcare;wellbeing;soft requirements;socio-political issues,human values;traceability;regulations;design decisions;accountable design,iStar,iStar social modeling;goal-oriented requirements engineering;GRL,iStar;textual modeling;automatic visualization;batch addition;model template,impact analysis;trace link visualization,innovation;journalism;stakeholder discovery;vision-building;design sciences research,invisibility;correlation;cooperation;conflict;non-functional requirement;catalog,just-in-time RE;quality requirements;managing requirements knowledge,just-in-time requirements engineering;open source software;security requirements identification,large language models;prompt engineering;elicitation interview script generation;requirements engineering education,law;regulations;software quality;compliance,legal requirements;compliance;statutory interpretation;legal coverage,legal requirements;legal metadata;natural language processing;smart search;question answering,legal requirements;semantic legal metadata;natural language processing,machine learning;convolutional neural networks;requirements identification;TensorFlow;Word2Vec,machine learning;quality requirements;software quality model;quality characteristics;quality measures;quality assurance,machine learning;reinforcement learning;information retrieval;requirements traceability;software engineering;Ubiquitous Grand Challenge;Research Project 2 of Grand Challenges of Traceability,machine learning;requirements engineering;interview study;data science,maintainability,microservice decomposition;problem frames;requirements engineering;complexity computing,mining software repositories;data collection;data mining;requirements analysis;traceability,model based systems engineering;requirements engineering;empirical research;cognitive processes,model transformation;i* model checking;i* compliance,natural language processing;requirements engineering;model driven development;user stories;agile development;goal models,next release problem;release planning;goal oriented requirements engineering;constrained goal models;multi-objective optimization;optimization modulo theories,non-functional requirements;eye movement pattern;empirical evaluation;eye tracking,non-functional requirements;nfrs;videos;vision videos,non-functional requirements;priorities;uncertainty;self-adaptive systems,non-functional requirements;self-adaptive systems;priorities,nonfunctional requirements framework,obstacle analysis;risk assessment;probabilistic goals;requirements completeness;uncertainty management;quantitative reasoning;goal-oriented requirements engineering,ontology,open environment;modeling;adaptation;learning;requirements elicitation;AI-based systems,open environment;modeling;adaptation;learning;requirements monitoring;AI-based systems,open source software;open source requirements;provisionments,pairing,personas;requirements engineering;interviews;recommendations,practices;industry;usability;tools;aeronautics,privacy requirements engineering;user story;natural language processing,privacy;privacy conflict;conflict analysis;software engineering,problem statement;requirements engineering;communication;stakeholders;business versus IT;cooperation,process modelling;no-code;end-user development;socio-technical systems;requirements elicitation,rail infrastructure system,re-use;software quality;non-functional requirements;usability evaluation;Kansei Engineering;Neural Networks,regulatory ambiguity analysis,regulatory compliance;software development,requirement discovery;requirement verification;goal model;quality assurance;maintenance and evolution,requirement driven self-adaptation;adaptation plan;reinforcement learning;case-based reasoning,requirement inspections;classification;semantic analysis;topic modeling;high quality requirements;interrelated requirements;part of speech tags,requirement relaxation;requirement granularity;discrete controller synthesis;self-adaptive system;RE@runtime,requirements,requirements analysis,requirements and testing in practice,requirements authoring tool;client server tool;relationships;transport sector;tool demo;constrained natural language;parser generator,requirements classification;domain-specific tax-onomy;large-scale;multi-label,requirements classification;requirements allocation;natural language processing;language models,requirements elicitation,requirements elicitation;digital workshop;applied cognitive task analysis;lessons learned,requirements elicitation;privacy concerns;narratives;forum mining;crowd data,requirements elicitation;socio-technical system;agriculture;living labs;process modelling;end-user development,requirements elicitation;user stories;information;requirements evolution,requirements elicitation;variability analysis;self-adaptive systems;repertory grid,requirements engineering,requirements engineering education;higher education;curriculum;teaching,requirements engineering;Web3;blockchain;smart contracts;rollup,requirements engineering;artificial intelligence;machine learning;human-centric,requirements engineering;continuous software engineering;automotive systems engineering,requirements engineering;conversations;elicitation;natural language processing;traceability,requirements engineering;crowd;well-being;health;older adult,requirements engineering;education;interview;requirements elicitation interview;training material;training;experiment;empirical evaluation;quantitative analysis;mistakes;interview mistakes;communication mistakes,requirements engineering;eye tracking;vision;video;text,requirements engineering;formalization;consistency;correctness;completeness;simulation,requirements engineering;goal mode;systematic literature survey;systematic literature map;evidence-based requirements engineering,requirements engineering;goal modeling;natural language;decision analysis;preference analysis,requirements engineering;history;requirements engineering conference;software engineering;RE@21,requirements engineering;interpretable machine learning;requirements classification;explainable AI,requirements engineering;interview study;research software,requirements engineering;large language models;artificial intelligence,requirements engineering;large-scale agile;system engineering,requirements engineering;large-scale agile;tooling,requirements engineering;lessons learned;challenges;other domains;synergies;best practices,requirements engineering;model–driven development;user stories;agile development;goal models;natural language processing,requirements engineering;requirements artifacts;focus+context;visualization;navigation;physical metaphor;magnet;spring,requirements engineering;requirements elicitation;rural areas;case study,requirements engineering;requirements patterns,requirements engineering;requirements quality;literature review;interview study;activity,requirements engineering;requirements quality;quality factor;ontology,requirements engineering;requirements taxonomy;requirements classification;classification quality;functional requirements;non-functional requirements;quality requirements,requirements engineering;requirements traceability;blockchain technology;smart contracts,requirements engineering;serious games;user stories;QUS framework,requirements engineering;shared understanding;vision videos;exploratory research,requirements engineering;socio-technical system;regulatory compliance;digitalization;digital transformation,requirements engineering;software compliance;regulatory requirement engineering;legal domain knowledge;engineering-legal coordination,requirements engineering;software ecosystem;mixed method,requirements engineering;software engineering;information systems;digital design,requirements engineering;software requirements;large language model;quality assurance;quality improvement;empirical study,requirements engineering;system testing alignment;large-scale agile system development,requirements engineering;technology transfer,requirements extraction;natural language;crowdsourcing,requirements knowledge,requirements management;just-in-time requirements;traceability;refactoring,requirements models;quality evaluation;metrics;biometrics,requirements prioritization,requirements problem for adaptive systems,requirements quality;text mining,requirements specification;natural language;patterns;ontologies,requirements specification;requirements communication;agile teams;information needs;empirical studies,requirements traceability;logic;rules,requirements traceability;maturity evaluation;technology transfer;technology selection,requirements traceability;traceability problem classes;problem dependencies;assessment;inspection,requirements traceability;traceability strategy;traceability strategy assessment;interview study;empirical study;traceability usage goals;project-specific traceability,requirements traceability;tracing;trace links;eye tracking;interview study;empirical research;automatic approach,requirements writing;technical writing;controlled natural language;corpus linguistics;textual genre,requirements-based testing,requirements-engineering;software-engineering,requirements;agile;devops;acceptance tests,requirements;configuration;machine learning;modelling,requirements;elicitation;animal-computer interaction;non-human,requirements;goal Model;quality concerns;visualization,requirements;reference model;twin peaks,requirements;requirements engineering;sustainability;agile;scrum;product owner,requirements;reuse;standardization;standards;traceability;process;practical,requirements;satisfaction arguments;language models,requirements;software architecture;synthesis;change;learning;models@runtime;reasoning@runtime,requirements;technical writing;controlled language;evaluation;survey,requirements;vulnerability;software security;secure code,reusability,reuse,scenarios;entity extraction;privacy;risk,security requirements elicitation;requirements prioritisation;threat analysis;gamification,security requirements;classification;common weakness enumeration;domain-independent;one-class svm,security requirements;requirements elicitation;elicitation methods;security policies;industrial case study,self-adaptive systems engineering;variability modelling;risk modelling;requirement analysis;risk analysis,semantic frames,serious games;requirements elicitation;idea generation;card sorting;behavior change,shared understanding;continuous software engineering;non-functional requirements;remote,shared understanding;non-functional requirements;continuous software engineering,shared understanding;non-functional requirements;continuous software engineering;rework,situated cognition,social goal models;i*;diagram layout;complexity;eye-tracking,social goal models;iStar 2.0;biometrics;gender,social goal models;iStar;physics of notations;eye tracking,society;requirements engineering;rural areas;smart cities;experiences;challenges;living lab;vision,soft requirements;NFRs;elicitation;technology acceptance;social issues;values,software,software ecosystem;architecture,software engineering,software engineering;requirements engineering;SE education;teaching and learning;peer-review;Agile;Scrum,software engineering;requirements engineering;requirements elicitation;context awareness;context modeling;context meta-modeling,software evolution;software development;software maintenance;end-user feedback;requirements elicitation;user involvement;case study;survey;experience report,software packages;requirements-led configurations;product variability modelling;transcript analysis,software product lines;natural langage requirements;natural language processing,software requirements allocation;automated planning;artificial intelligence;incremental development.,software sustainability;requirements engineering;requirements dimension;interdisciplinary design,software traceability;eye tracking;interaction data;trace links,software;requirements;sustainability;model,source of requirements;Instagram;empirical study;social media;feeback;user feedback,stakeholder identification;requirements elicitation;software ecosystems,standardization;simulation;co simulation;dcp;process;standard,startup;B2B;stakeholder;social network;requirements elicitation;advisors;users;decision-makers,strategic decision-making;business intelligence;goal modeling;requirement engineering;software engineering,sustainable development;requirements engineering;software tools;sociotechnical systems,symbolic modeling;verification of requirements;Use Case Maps;basic protocols,system-of-systems;business models;architecturally significant requirements;software ecosystems;mining automation,taxonomy of reactive testing,terminology extraction;TextRank;text mining;requirements analysis;feature modeling,test cases,test optimization,test tool,test-driven development,text extraction;deep learning;natural language processing;large language models;question-answering;token classification;text-to-text generation;prompting;empirical research,text mining,traceability,traceability management;collaboration,traceability;body of knowledge;software product,traceability;software and systems traceability;traceability tool;traceability practice,transparency requirements;transparency modelling;transparency analysis;socio-technical systems,trust;transparency;ethics;non-functional requirements;corporate social responsibility,uncertainty,uncertainty;self-adaptation;requirements reflection;requirements assessment;Bayesian Surprise,unknown requirements;requirements elicitation;awareness requirements;data mining;medical informatics,usability,usability requirements,use case descriptions;smell detection,use cases,user experience design (UXD),user feedback;Twitter;software evolution;text mining;requirements elicitation,user feedback;requirements engineering;social media analysis;user stories,user feedback;requirements engineering;text clustering;text embedding;cluster characterization,user feedback;requirements prioritization;multi-criteria automated requirements prioritization,user feedback;software evolution;text mining;requirements elicitation,user feedback;usage monitoring;usage data;continuous software engineering;interview study,user needs;user feedback;mobile requirements,user story templates;eye-tracking;empirical evaluation,user study,user study;vignettes;factor surveys;security requirements;requirements elicitation,user study;vignettes;scenarios;security requirements;requirements elicitation;qualitative analysis;context,vagueness;hedging;natural language processing;privacy;risk perception,value assurance,vision video;interactivity;annotation;player;requirements engineering;active video watching;e-learning,visually impaired,workshop summary;software startups;generative AI;blockhain;requirement engineering